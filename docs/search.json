[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "US Job Market Analysis",
    "section": "",
    "text": "1 Introduction\nWe analyze the Job Openings and Labor Turnover Survey (JOLTS) due to its relevance in providing insights into job market dynamics, essential for international master’s students like us entering the workforce in the US. We believe this data will help us understand job openings, hires, and separations across industries and regions, crucial for job seekers.\n\nAreas of Interest for Study\n\nJOLTS data helps us comprehend which sectors offer more job opportunities and how turnover rates fluctuate over time.\nThe dataset contains report from December 2000 to the present, allowing us to analyze job market trends across various economic cycles. This knowledge assists us in making informed decisions during our job search, enabling us to focus on industries with higher job openings or better stability.\nThe breakdown of data by industries based on the American industry classification is particularly valuable. It guides us in identifying sectors experiencing growth or decline in job openings, aiding us in strategic career planning.\nThe data provides us with opportunities to explore labor market policies and conduct research in labor economics. It equips us with a deeper understanding of the impact of policies on job openings and turnover rates.\n\n\n\nHow will it help in job applications?\nStudying this dataset helps us stand out in job hunting. Understanding this data lets us customize how we search for jobs and decide which career paths to pursue. It’s like a guide showing us which industries are doing well and where there are more job opportunities.\nThis knowledge helps Master’s students like us prepare better job applications. By focusing on sectors with more job openings, we can improve our chances of getting interviews. Also, knowing what skills are in demand based on current job trends helps us work on developing those skills, making us more attractive to employers.\nIn short, studying this data gives us an edge in our job search. It helps us tailor our job-hunting strategies, pick the right career paths, and understand which industries are popular so we can improve our chances of landing interviews."
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\n\nJob Openings and Labor Turnover Survey (JOLTS) Dataset\nThe Job Openings and Labor Turnover Survey (JOLTS) provides national estimates of rates and levels for various labor market dynamics. The survey covers job openings, hires, and total separations, further broken down into quits, layoffs and discharges, and other separations.\n\nDataset Files\nThe survey data is accessible through FTP files available in the BLS internet sub-directory pub/time.series/jt. These files include information on contacts, current data, all items, job openings, hires, total separations, quits, layoffs and discharges, other separations, and various mapping files providing additional context.\n\n\nSeries File\nThe jt.series file serves as a key component, detailing the structure and format of series identification codes. Each code includes information on seasonality, industry, state, area, size class, data element, rate level, and footnote codes. This information allows for precise identification and categorization of data series.\n\n\nMapping Files\nVarious mapping files, such as jt.area, jt.dataelement, jt.footnote, jt.industry, jt.period, jt.ratelevel, jt.seasonal, jt.sizeclass, and jt.state, provide textual descriptions for the codes used in the series identification. These mapping files enhance the interpretability of the data.\nThe JOLTS dataset is a valuable resource for understanding labor market dynamics, offering detailed and well-organized information that enables researchers, policymakers, and analysts to gain insights into the trends and patterns shaping the employment landscape."
  },
  {
    "objectID": "data.html#research-plan",
    "href": "data.html#research-plan",
    "title": "2  Data",
    "section": "2.2 Research Plan",
    "text": "2.2 Research Plan\n\nData Collection: As, the dataset is divide into different files, containing job openings, hires, separations, and industry specifics, we collect the files and convert into csv format for further analysis.\nPreprocessing: Cleaning and organizing the data. Here we also analyse any missing values in our dataset.\nExploratory Analysis: Identify trends, patterns, and correlations in job data across industries and regions.\nAddressing Research Questions: We merge our dataset files to uncover significant trends and relationships among various job analysis metrics. We plan to observe the following:\n\nIndustry Insights: Identify high-demand industries aligning with skills.\nRegional Variations: Map job trends across regions for better prospects.\nJob Market Trends: Analyze sectoral shifts over time for informed career choices.\nTurnover Rates: Assess job stability and growth potential in different sectors.\nSeasonal Trends: Study seasonal impacts on job openings and separations.\n\nStatistical Insight: Use models for predictive analysis or understanding influencing factors.\nInteractive component: Using D3, we provide engaging graphs to gain clear understanding on the dataset\nReporting: Summarize the findings, highlight insights, and present recommendations for career planning and job search strategies."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.3 Missing value analysis",
    "text": "2.3 Missing value analysis\nFor most of our files we do not observe any missing values in the dataset. Majorly, the footnote_codes values are found to be missing in the datasets (wherever it referred). This may be due to the fact that this dataset only have 1 type of footnote which may be not linked to most of the data values. Particularly in the mapping files of industry dataset we observe display_level, selectable and sort_sequence to be missing from the dataset (in each 14.3% values are NA)\n\n\nCode\nsuppressPackageStartupMessages({\n  library(tidyverse)\n})\n\nfolder_path &lt;- \"./data\"\n\ncsv_files &lt;- list.files(folder_path, pattern = \"\\\\.csv$\", full.names = TRUE)\n\nall_missing_summary &lt;- list()\n\nfor (file in csv_files) {\n  data &lt;- read.csv(file)\n\n  csv_file_name &lt;- strsplit(file, \"/\")[[1]][3]\n\n  missing_summary &lt;- data %&gt;%\n    summarise_all(~ mean(is.na(.)) * 100) %&gt;%\n    gather(key = \"variable\", value = \"missing_percentage\") %&gt;%\n    arrange(desc(missing_percentage))\n\n  all_missing_summary[[csv_file_name]] &lt;- missing_summary\n}\n\ncombined_missing_summary &lt;- bind_rows(all_missing_summary, .id = \"csv_file_name\")\n\nmissing_value_graph &lt;- ggplot(combined_missing_summary, aes(x = reorder(variable, -missing_percentage), y = missing_percentage)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  geom_text(data = subset(combined_missing_summary, missing_percentage != 0),\n            aes(label = round(missing_percentage, 1)), vjust = -0.3, size = 3) +\n  labs(title = \"Missing Value Summary\",\n       x = \"Variables\",\n       y = \"missing Values (%)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title=element_text(hjust=0.5)) +\n  expand_limits(x = 0, y = 110) +\n  scale_y_continuous(expand = c(0, 0)) +\n  facet_wrap(~csv_file_name, scales = \"free\", ncol=2)\n\nprint(missing_value_graph)"
  },
  {
    "objectID": "data.html#missing-data-pattern",
    "href": "data.html#missing-data-pattern",
    "title": "2  Data",
    "section": "2.4 Missing Data Pattern",
    "text": "2.4 Missing Data Pattern\nWe observe that series.csv data only has one column which is missing for all the samples, on the other hand industry.csv has 3 columns which may have some pattern between the missing values. To further analyse this we use the redav package to identify the pattern in these missing values.\n\n\nCode\nsuppressWarnings({\n  library(redav)\n\nindustry_df &lt;- read.csv('./data/industry.csv') \nplot_missing(industry_df)\n})\n\n\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale."
  },
  {
    "objectID": "data.html#data-summary",
    "href": "data.html#data-summary",
    "title": "2  Data",
    "section": "2.5 Data Summary",
    "text": "2.5 Data Summary\n\n\nCode\nsuppressPackageStartupMessages({\n  library(ggplot2)\n  library(tidyverse)\n  library(gridExtra)\n})\n\n# Specify the folder path\nfolder_path &lt;- \"./data/\"\n\n# Read CSV files with full path\nhires &lt;- read.csv(paste0(folder_path, \"Hires.csv\"))\nlayoffs_discharges &lt;- read.csv(paste0(folder_path, \"LayoffsDischarges.csv\"))\nindustry &lt;- read.csv(paste0(folder_path, \"industry.csv\"))\nunemployed_per_job_opening_ratio &lt;- read.csv(paste0(folder_path, \"UnemployedPerJobOpeningRatio.csv\"))\ntotal_separations &lt;- read.csv(paste0(folder_path, \"TotalSeperations.csv\"))\nquits &lt;- read.csv(paste0(folder_path, \"Quits.csv\"))\njob_openings &lt;- read.csv(paste0(folder_path, \"JobOpenings.csv\"))\nseries &lt;- read.csv(paste0(folder_path, \"series.csv\"))\n\ncreate_histogram &lt;- function(data, title, x_label, y_label) {\n  suppressWarnings({\n    ggplot(data, aes(x = year, y = value)) +\n    geom_histogram(stat = \"identity\", bins = 30, breaks = seq(min(data$year), max(data$year) + 1, by = 1)) +\n    labs(title = title, x = x_label, y = y_label)})\n  \n}\n\n# Create individual histograms\nhistogram_hires &lt;- create_histogram(hires, \"Hires\", \"Year\", \"Value\")\nhistogram_layoffs_discharges &lt;- create_histogram(layoffs_discharges, \"Layoffs and Discharges\", \"Year\", \"Value\")\nhistogram_unemployed_per_job_opening_ratio &lt;- create_histogram(unemployed_per_job_opening_ratio, \"Unemployed Per Job Opening Ratio\", \"Year\", \"Value\")\nhistogram_total_separations &lt;- create_histogram(total_separations, \"Total Separations\", \"Year\", \"Value\")\nhistogram_quits &lt;- create_histogram(quits, \"Quits\", \"Year\", \"Value\")\nhistogram_job_openings &lt;- create_histogram(job_openings, \"Job Openings\", \"Year\", \"Value\")\n\n# Arrange histograms in a grid\ngrid.arrange(\n  histogram_hires,\n  histogram_layoffs_discharges,\n  histogram_unemployed_per_job_opening_ratio,\n  histogram_total_separations,\n  histogram_quits,\n  histogram_job_openings,\n  ncol = 2  # Adjust the number of columns as per your preference\n)"
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages(\nsuppressWarnings({\n  library(ggplot2)\n  library(tidyverse)\n  library(gridExtra)\n  library(dplyr)\n  library(plotly)\n  library(janitor)\n}))\n\nfolder_path &lt;- \"./data/\"\nfolder_path_other &lt;- './data_other/'\n\n\nhires &lt;- read.csv(paste0(folder_path, \"Hires.csv\"))\nlayoffs_discharges &lt;- read.csv(paste0(folder_path, \"LayoffsDischarges.csv\"))\nindustry &lt;- read.csv(paste0(folder_path, \"industry.csv\"))\nunemployed_per_job_opening_ratio &lt;- read.csv(paste0(folder_path, \"UnemployedPerJobOpeningRatio.csv\"))\ntotal_separations &lt;- read.csv(paste0(folder_path, \"TotalSeperations.csv\"))\nquits &lt;- read.csv(paste0(folder_path, \"Quits.csv\"))\njob_openings &lt;- read.csv(paste0(folder_path, \"JobOpenings.csv\"))\nseries &lt;- read.csv(paste0(folder_path, \"series.csv\"))\n\nall_item &lt;- read.csv(paste0(folder_path_other, \"AllItems.csv\"))\ndataelement &lt;- read.csv(paste0(folder_path_other, \"dataelement.csv\"))\nsizeclass &lt;- read.csv(paste0(folder_path_other, \"sizeclass.csv\"))\nstate &lt;- read.csv(paste0(folder_path_other, \"state.csv\"))\n\n\nall_item &lt;- all_item %&gt;%\n  mutate(\n    value = as.numeric(value),\n    series_id = str_trim(series_id),\n    date = as.Date(paste(substr(period,2,3),\"01\",year,sep=\"/\"),\"%m/%d/%Y\")\n  )\n\nseries&lt;-series %&gt;%\n  clean_names %&gt;%\n  mutate_all(str_trim)\n\ndataelement&lt;-dataelement %&gt;%\n  clean_names %&gt;%\n  mutate_all(str_trim)\n\nsizeclass&lt;-sizeclass %&gt;%\n  clean_names %&gt;%\n  mutate_all(str_trim)\n\nindustry&lt;-industry %&gt;%\n  clean_names %&gt;%\n  mutate_all(str_trim)\n\nstate&lt;-state %&gt;%\n  clean_names %&gt;%\n  mutate_all(str_trim)\n\njolts &lt;- all_item %&gt;%\n  inner_join(series, by = c(\"series_id\")) %&gt;%\n  inner_join(dataelement, by = c(\"dataelement_code\"),suffix = c(\".series\", \".data_element\")) %&gt;%\n  inner_join(industry, by = c(\"industry_code\"),suffix = c(\".x\", \".industry_code\")) %&gt;%\n  inner_join(sizeclass, by = \"sizeclass_code\") %&gt;%\n  inner_join(state, by=\"state_code\")\n\njolts &lt;- jolts %&gt;%\n  mutate(\n    industry_text = case_when(\n      industry_text == \"Professional and business services\" ~ \"Business services\",\n      industry_text == \"Education and health services\" ~ \"Education & health\",\n      industry_text == \"Leisure and hospitality\" ~ \"Leisure & hospitality\",\n      TRUE ~ industry_text\n    )\n  )\n\n\n\nOverall Market state\n\n\n\nCode\njolts_filtered &lt;- jolts %&gt;%\n  filter(period != \"M13\", seasonal == \"S\", ratelevel_code == \"L\") %&gt;%\n  filter(display_level.industry_code == 2) %&gt;%\n  filter(dataelement_text != \"Layoffs and discharges\", dataelement_text != \"Other separations\") %&gt;%\n  filter(date == max(date))\n\nplot1 &lt;- jolts_filtered %&gt;%\n  ggplot(aes(industry_text, value)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  facet_wrap(~ dataelement_text, ncol = 2) +\n  labs(title = \"Industry Data (Current 2023 Market)\", x = \"Industry\", y = \"Value\") +\n  theme(strip.text.y = element_text(margin = margin(10, 0, 10, 0)))\n\nplotly1 &lt;- ggplotly(plot1)\nplotly1\n\n\n\n\n\n\n\nThe trend of Job openings and Hiring over the years for each industry\n\n\n\nCode\na &lt;- jolts %&gt;%\n  filter(period != \"M13\", seasonal == \"S\", ratelevel_code == \"R\") %&gt;%\n  filter(display_level.industry_code == 2) %&gt;%\n  filter(dataelement_text %in% c(\"Job openings\", \"Hires\")) %&gt;%\n  group_by(industry_text, dataelement_text, year = lubridate::year(date)) %&gt;%\n  summarise(mean_value = mean(value, na.rm = TRUE)) %&gt;%\n  pivot_wider(names_from = dataelement_text, values_from = mean_value)\n\n\n`summarise()` has grouped output by 'industry_text', 'dataelement_text'. You\ncan override using the `.groups` argument.\n\n\nCode\nplot2 &lt;- ggplot(a, aes(x = year)) +\n  geom_line(aes(y = `Job openings`, color = \"Job Openings\")) +\n  geom_point(aes(y = `Job openings`, color = \"Job Openings\")) +\n  geom_line(aes(y = Hires, color = \"Hires\")) +\n  geom_point(aes(y = Hires, color = \"Hires\")) +\n  facet_wrap(~ industry_text, ncol=2) +\n  labs(title = \"Mean Job Openings and Hires per Year\", x = \"Year\", y = \"Mean Value\", color = \"Metric\") +\n  theme(strip.text.y = element_text(margin = margin(10, 0, 10, 0)))\n\nplotly1 &lt;- ggplotly(plot2)\nplotly1\n\n\n\n\n\n\n\nJob openings and hiring trend\n\n\n\nCode\na &lt;- jolts %&gt;%\n  filter(period != \"M13\", seasonal == \"S\", ratelevel_code == \"R\") %&gt;%\n  filter(display_level.industry_code == 2) %&gt;%\n  filter(dataelement_text == \"Hires\" | dataelement_text == \"Job openings\") %&gt;%\n  filter(year&gt; 2021) %&gt;%\n  pivot_wider(id_cols = c(\"date\",\"industry_text\"), names_from = dataelement_text, values_from = value) %&gt;%\n  mutate(year = factor(year(date)))\n\nplot2 &lt;- ggplot(a, aes(Hires, `Job openings`, color = year)) +\n  geom_point() +\n  theme_classic() +\n  facet_wrap(~ industry_text, ncol=2) +\n  labs(title = \"Job Openings vs Hires\", x = \"Hires\", y = \"Job Openings\")\n\nplotly2 &lt;- ggplotly(plot2)\nplotly2\n\n\n\n\n\n\n\nThe reasons for leaving the job\n\n\n\nCode\na &lt;- jolts %&gt;%\n  filter(period != \"M13\", seasonal == \"S\", ratelevel_code == \"R\") %&gt;%\n  filter(display_level.industry_code == 2) %&gt;%\n  filter(dataelement_text == \"Quits\" | dataelement_text == \"Layoffs and discharges\") %&gt;%\n  filter(year &gt;2021) %&gt;%\n  pivot_wider(id_cols = c(\"date\",\"industry_text\"), names_from = dataelement_text, values_from = value) %&gt;%\n  mutate(year = factor(year(date)))\n\nplot2 &lt;- ggplot(a, aes(Quits, `Layoffs and discharges`, color = year)) +\n  geom_point() +\n  theme_classic() +\n  facet_wrap(~ industry_text, ncol=2) +\n  labs(title = \"Layoffs and discharges vs Quits\", x = \"Quits\", y = \"Layoffs and discharges\")\n\nplotly2 &lt;- ggplotly(plot2)\nplotly2"
  },
  {
    "objectID": "d3graph.html#job-market-analysis",
    "href": "d3graph.html#job-market-analysis",
    "title": "4  Interactive graph",
    "section": "4.1 Job Market Analysis",
    "text": "4.1 Job Market Analysis\nExploring trends in job hires and job openings across different industries over the years. Use the interactive graph below to visualize and compare the data. Select an industry from the dropdown menu, and toggle between “Hires” and “Job Openings” to analyze the corresponding values. The graph updates dynamically, providing insights into the job market dynamics.\n\nSelect Industry: \n\n\nData Type: Job Openings Hires"
  }
]